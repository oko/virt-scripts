#!/usr/bin/env python
import click
import ipaddress
import logging
import os
import subprocess
import tempfile

logging.basicConfig()
logging.getLogger().setLevel(logging.DEBUG)
log = logging.getLogger(__name__)


@click.command("vm-mkcidata")
@click.option("--address", type=ipaddress.ip_interface, required=True)
@click.option("--username", type=str, default="")
@click.option("--password", type=str, default="")
@click.argument("hostname", type=str)
@click.argument("output", type=str)
def mkcidata(address, username, password, hostname, output):
    if username == "":
        username = click.prompt("enter cloud init username")
    if password == "":
        password = click.prompt("enter cloud init password", hide_input=True)

    with tempfile.TemporaryDirectory() as d:
        udpath = os.path.join(d, "user-data")
        mdpath = os.path.join(d, "meta-data")
        ncpath = os.path.join(d, "network-config")

        with open(udpath, "w") as f:
            content = """#cloud-config
user: %s
password: %s
chpasswd: { expire: False }
ssh_pwauth: True
power_state:
  delay: "+30"
  mode: poweroff
  message: Bye Bye
  timeout: 30
  condition: True
""" % (
                username,
                password,
            )
            log.debug(content)
            f.write(content)

        with open(ncpath, "w") as f:
            content = f"""
version: 2
ethernets:
  eth0:
    addresses:
      - {address.with_netmask}
    gateway4: {next(address.network.hosts())}
    dhcp: false"""
            log.debug(content)
            f.write(content)
        with open(mdpath, "w") as f:
            content = f"""instance-id: {hostname}
local-hostname: {hostname}"""
            log.debug(content)
            f.write(content)

        subprocess.check_call(
            [
                "genisoimage",
                "-r",
                "-J",
                "-v",
                "-V",
                "CIDATA",
                "-graft-points",
                "-o",
                output,
                f"/={d}",
            ]
        )


if __name__ == "__main__":
    mkcidata()
